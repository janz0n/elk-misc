# Json template
template(name="ls_json_ecs" type="list")
{
  constant(value="{")
  constant(value="\"ecs.version\":\"1.0.0")
  constant(value="\",\"event.created\":\"")          property(name="timereported" dateFormat="rfc3339" format="json")
  constant(value="\",\"event.priority\":\"")         property(name="pri" format="json")
  constant(value="\",\"event.severity_label\":\"")   property(name="syslogseverity-text" format="json")
  constant(value="\",\"event.severity\":\"")         property(name="syslogseverity" format="json")
  constant(value="\",\"event.facility_label\":\"")   property(name="syslogfacility-text" format="json")
  constant(value="\",\"event.facility\":\"")         property(name="syslogfacility" format="json")
  constant(value="\",\"event.program\":\"")          property(name="programname" format="json")
  constant(value="\",\"host.name\":\"")              property(name="fromhost" format="json" caseConversion="lower")
  constant(value="\",\"host.ip\":\"")                property(name="fromhost-ip" format="json")
  constant(value="\",\"process.pid\":\"")            property(name="$!pid" format="json")
  constant(value="\",\"message\":\"")                property(name="msg" format="json")
  constant(value="\",\"tags\":\"syslog")
  constant(value="\"}\n")
}

# Custom ruleset
ruleset(name="la-rsyslog"){
  # Transform empty result '-' to 0, process.pid stored as long
  if $procid == "-" then {
    set $!pid = "0";
  } else {
    set $!pid = $procid;
  }

  # Send to Logstash
  action(
    type="omfwd"
    target="127.0.0.1"
    port="5514"
    protocol="udp"
    template="ls_json_ecs"
  )

  # Stop processing
  stop
}

# UDP input
module(load="imudp")
input(type="imudp" port="514" ruleset="la-rsyslog" ratelimit.interval="0" ratelimit.burst="20000")

# TCP input
module(load="imtcp")
input(type="imtcp" port="514" ruleset="la-rsyslog" ratelimit.interval="0" ratelimit.burst="20000")
